{"version":3,"sources":["particles-config.js","App.js","reportWebVitals.js","index.js"],"names":["particlesConfig","value_area","App","props","tweetQuote","state","quote","author","twitterUrl","window","open","getQuote","setState","loading","fetch","then","res","json","data","body","catch","err","console","error","this","className","params","style","paddingRight","fontSize","title","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAyBeA,EAzBS,CACtB,UAAa,CACX,OAAU,CACR,MAAS,GACT,QAAW,CACT,QAAU,EACVC,WAAY,MAGhB,MAAS,CACP,MAAS,WAEX,QAAW,CACT,MAAS,GAEX,KAAQ,CACN,MAAS,EACT,QAAU,EACV,KAAQ,CACN,QAAU,EACV,MAAS,O,eCwDFC,E,kDApEb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IASVC,WAAa,WAAO,IAAD,EACO,EAAKC,MAAtBC,EADU,EACVA,MAAOC,EADG,EACHA,OACRC,EAAU,gDAA4CF,EAA5C,cAAuDC,GACvEE,OAAOC,KAAKF,EAAY,WAbN,EAepBG,SAAW,WACP,EAAKC,SAAS,CAACC,SAAS,IACtBC,MAAM,6BAA8B,CACpC,OAAU,MACV,QAAW,CACT,eAAgB,mBAChB,cAAiB,oDAGlBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAI,EAAKN,SAAS,CAACN,MAAOY,EAAKZ,MAAMa,KAAMZ,OAAQW,EAAKZ,MAAMC,OAAQM,SAAS,OACxFO,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,OAvB9B,EAAKhB,MAAQ,CACXC,MAAO,GACPC,OAAQ,GACRM,SAAS,GANK,E,qDA6BpB,WACEW,KAAKb,a,oBAOL,WAAS,IAAD,EAC2Ba,KAAKnB,MAA/BC,EADD,EACCA,MAAOC,EADR,EACQA,OAAQM,EADhB,EACgBA,QACtB,OACE,sBAAKY,UAAU,MAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YAAYC,OAAQ1B,IACvCa,EACE,qBAAKY,UAAU,WACf,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CAAaE,MAAO,CAAEC,aAAc,OAAQC,SAAU,UACpD,sBAAMJ,UAAU,QAAhB,SACCnB,OAGL,qBAAKmB,UAAU,eAAf,SACE,+BAAOlB,MAET,sBAAKkB,UAAU,mBAAf,UACE,wBAAQA,UAAU,iBAAiBK,MAAM,cAAcC,QAASP,KAAKpB,WAArE,SACE,cAAC,IAAD,CAAWqB,UAAU,mBAEvB,wBAAQA,UAAU,YAAYM,QAASP,KAAKb,SAA5C,oC,GA3DEqB,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.87936135.chunk.js","sourcesContent":["const particlesConfig = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 99,\n      \"density\": {\n        \"enable\": true,\n        value_area: 600\n      }\n    },\n    \"color\": {\n      \"value\": \"#ded9d9\"\n    },\n    \"opacity\": {\n      \"value\": 5\n    },\n    \"size\": {\n      \"value\": 1,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 50\n      }\n    }\n  }\n}\nexport default particlesConfig;","import React from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport particlesConfig from './particles-config';\nimport {FaQuoteLeft, FaTwitter} from 'react-icons/fa';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      quote: '',\n      author: '',\n      loading: true\n    }\n  }\n\ntweetQuote = () => {\n  const {quote, author} = this.state;\n  const twitterUrl = `https://twitter.com/intent/tweet?text=${quote} - ${author}`;\n  window.open(twitterUrl, '_blank');\n}\ngetQuote = () => {\n    this.setState({loading: true});\n      fetch(\"https://favqs.com/api/qotd\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": 'Token token=\"a4cc0569a80b1af6eef203ef9e6be28b\"'\n      }\n      })\n      .then(res => res.json())\n      .then(data => this.setState({quote: data.quote.body, author: data.quote.author, loading: false}))\n      .catch(err => console.error(err));\n};\n\ncomponentDidMount() {\n  this.getQuote();\n};\n\n  \n  \n  \n\n  render(){\n    const {quote, author, loading} = this.state;\n    return(\n      <div className=\"App\">\n        <Particles className='particles' params={particlesConfig} />\n        { loading\n          ? <div className='loader'></div>\n          : <div className='quote-container'>\n              <div className='quote-text'>\n                <FaQuoteLeft style={{ paddingRight: '10px', fontSize: '4rem'}}/>\n                  <span className='quote'>\n                  {quote}\n                  </span>\n              </div>\n              <div className='quote-author'>\n                <span>{author}</span>\n              </div>\n              <div className='button-container'>\n                <button className='twitter-button' title='Tweet This!' onClick={this.tweetQuote}>\n                  <FaTwitter className='twitter-icon'/>\n                </button>\n                <button className='new-quote' onClick={this.getQuote}>New Quote</button>\n      \n              </div>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}